name: CI

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on: [pull_request, push]

jobs:
  linux:
    name: Test on Ubuntu (Elixir ${{ matrix.elixir_version }}, OTP ${{ matrix.otp_version }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        elixir_version: ['1.11.3']
        otp_version: ['23.2', '22.3', '21.3']

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Elixir
        uses: actions/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir_version }}
          otp-version: ${{ matrix.otp_version }}
          experimental-otp: true
      - name: Restore deps and _build
        uses: actions/cache@v2
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ matrix.elixir_version }}-${{ matrix.otp_version }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
      - name: Restore plts
        uses: actions/cache@v2
        with:
          path: test/support/plts
          key: ${{ runner.os }}-dialyzer-${{ matrix.elixir_version }}-${{ matrix.otp_version }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
      - name: Get and compile dependencies
        run: |
          mix deps.get
          mix deps.compile
      - name: Compile project
        run: MIX_ENV=test mix compile --warnings-as-errors
      - name: Check code format
        if: ${{ contains(matrix.elixir_version, '1.11') }}
        run: mix format --check-formatted
      - name: Lint code
        run: MIX_ENV=test mix credo --strict
      - name: Run tests
        run: MIX_ENV=test mix coveralls.github
      - name: Static code analysis
        run: |
          mix compile
          mix dialyzer --halt-exit-status

